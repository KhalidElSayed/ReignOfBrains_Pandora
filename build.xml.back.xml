<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="ReignOfBrains3">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <path id="ReignOfBrains3.classpath">
        <pathelement location="bin"/>
    	<pathelement location="bin/levels"/>
       	<pathelement location="bin/sounds"/>
    	<pathelement location="bin/sprites"/>
    	<pathelement location="bin/lwjgl"/>
    	<pathelement location="bin/lwjgl/native/macosx"/>
    	<pathelement location="bin/lwjgl/native/linux"/>
    	<pathelement location="bin/lwjgl/native/windows"/>
        <pathelement location="bin/lwjgl/jar/jinput.jar"/>
        <pathelement location="bin/lwjgl/jar/AppleJavaExtensions.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
    	<mkdir dir="bin/sprites"/>
    	<mkdir dir="bin/sounds"/>
    	<mkdir dir="bin/levels"/>
    	<mkdir dir="bin/lwjgl"/>
    	<copy todir="bin">
    		<fileset dir="bin" includes="*" />
    		<fileset dir="." includes=".properties" />
    	</copy>
    	<copy todir="bin/sprites">	
    		<fileset dir="sprites" defaultexcludes="no" includes="**/*" />
        </copy>
        <copy todir="bin/sounds">	
    		<fileset dir="sounds" defaultexcludes="no" includes="**/*" />
        </copy>
        <copy todir="bin/levels">	
    		<fileset dir="levels" defaultexcludes="no" includes="**/*" />
        </copy>
        <copy todir="bin/lwjgl">	
    		<fileset dir="lwjgl" defaultexcludes="no" includes="**/*" />
    	</copy> 
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin">
            <src path="src"/>
            <exclude name="'*DS_Store*'"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/sounds">
            <src path="bin/sounds"/>
            <include name="'*'"/>
            <exclude name="'*DS_Store*'"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/levels">
            <src path="bin/levels"/>
            <include name="'**/*'"/>
            <exclude name="'*DS_Store*'"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/sprites">
            <src path="bin/sprites"/>
            <include name="'**/*'"/>
            <exclude name="'*DS_Store*'"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin/lwjgl">
            <src path="bin/lwjgl"/>
            <include name="'**/*'"/>
            <exclude name="'*DS_Store*'"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target depends="build" name="Main">
        <java classname="ReignOfBrains" failonerror="true" fork="yes">
            <jvmarg line="-Xms512M -Xmx512M -Djava.library.path=/Users/ejf3/bin/java/Eclipse/lwjgl/native/macosx"/>
            <classpath refid="ReignOfBrains3.classpath"/>
        </java>
    </target>
	<target depends="build" name="compile-build">
		<!-- deletes previously created jar -->
		<delete file="ReignOfBrains.jar" />
   	
		<!-- compile your code and drop .class into "bin" directory
		<javac srcdir="${basedir}" destdir="bin" debug="true" deprecation="on">
			<!- this is telling the compiler where are the dependencies ->
			<classpath refid="ReignOfBrains3.classpath" />
		</javac> -->

		<!-- copy the JARs that you need to "bin" directory 
		<copy todir="bin">
			<fileset dir="bin" includes="*" />
			<fileset dir="sprites" includes="*" />
			<fileset dir="sounds" includes="*" />
			<fileset dir="levels" includes="*" />
		</copy>  -->

		<!-- creates your jar with the contents inside "bin" (now with your .class and .jar dependencies) -->
		<jar destfile="ReignOfBrains.jar" basedir="bin" duplicate="preserve">
			<manifest>
				<!-- Who is building this jar? -->
				<attribute name="Built-By" value="emil10001" />
				<!-- Information about the program itself 
				<attribute name="Implementation-Vendor" value="ACME inc." />
				<attribute name="Implementation-Title" value="GreatProduct" />
				<attribute name="Implementation-Version" value="1.0.0beta2" />
				<!- this tells which class should run when executing your jar -->
				<attribute name="Main-class" value="ReignOfBrains" />
				<attribute name="Class-Path" value="bin lwjgl/native/macosx lwjgl/native/linux lwjgl/native/windows lwjgl/jar/jinput.jar lwjgl/jar/AppleJavaExtensions.jar" />		
			</manifest>
		</jar>
	</target>

	
</project>
